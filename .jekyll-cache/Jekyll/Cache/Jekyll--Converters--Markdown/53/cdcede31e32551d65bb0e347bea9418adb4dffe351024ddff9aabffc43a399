I"!<p float="center">
  <img src="/assets/images/gif/2020-10-2516-05.gif" width="300" />
</p>

<p>의존성 주입(Dependency Injection)을 구현하는 dagger-hilt eample을 공부하고 정리한 글</p>

<p>참고자료 <br />
<a href="https://developer.android.com/training/dependency-injection/hilt-android?hl=ko">Hilt - 공식문서</a> <br />
<a href="https://codelabs.developers.google.com/codelabs/android-hilt/?hl=ko#0">Hilt - Example</a></p>
<h2 id="dependency-injection과-hilt"><code class="language-plaintext highlighter-rouge">Dependency Injection</code>과 <code class="language-plaintext highlighter-rouge">Hilt</code></h2>
<p><code class="language-plaintext highlighter-rouge">Dependency Injection</code> 줄여서 <code class="language-plaintext highlighter-rouge">DI</code>는 프로그래밍에 널리 사용되며 안드로이드 개발에 잘 맞는 기술이다. <code class="language-plaintext highlighter-rouge">DI</code>의 원칠을 따르면 좋은 앱 아키텍처의 기초를 갖출 수 있다.</p>
<ul>
  <li><code class="language-plaintext highlighter-rouge">DI</code>의 장점</li>
  <li>코드의 재사용성</li>
  <li>리팩토링 용이성</li>
  <li>테스트 용이성</li>
</ul>

<p><code class="language-plaintext highlighter-rouge">Hilt</code>는 Android를 위한 <code class="language-plaintext highlighter-rouge">DI</code> 라이브러리이다. <code class="language-plaintext highlighter-rouge">DI</code>를 구현하려면 모든 클래스와 그 종속성을 수동으로 구성하고 컨테이너를 사용하여 재사용할 수 있도록 관리해야한다.  <br />
<code class="language-plaintext highlighter-rouge">Hilt</code>는 프로젝트의 모든 Android 구성요소에 컨테이너를 제공하고 컨테이너의 수명주기를 자동으로 관리함으로써 <code class="language-plaintext highlighter-rouge">DI</code>를 수행하는 표준을 제공한다. <br />
Android의 인기있는 라이브러리인 <code class="language-plaintext highlighter-rouge">Dagger</code>를 활용함으로써 완성된다.</p>
:ET